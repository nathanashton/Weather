<Window x:Class="Weather.Views.SensorsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        WindowStartupLocation="CenterScreen" WindowStyle="SingleBorderWindow" ResizeMode="NoResize"
        xmlns:converters="clr-namespace:Weather.Converters"
        mc:Ignorable="d"
        Title="Sensors" Height="330" Width="491.682">
    <Window.Resources>

        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#B3ADAB" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#FCFCFC" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#D1CECD" />

        <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="2" Name="Border"
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"
                        CornerRadius="0" BorderThickness="1, 1, 1, 1"
                        Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
                        CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0"
                        Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
                <Path Name="Arrow" Grid.Column="1"
                      Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                      HorizontalAlignment="Center" Fill="#444"
                      VerticalAlignment="Center" />
            </Grid>
            <ControlTemplate.Triggers>


                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke" />
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E" />
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter Property="Panel.Background" TargetName="Border"
                            Value="{StaticResource ComboBoxDisabledBackgroundBrush}" />
                    <Setter Property="Panel.Background" TargetName="ButtonBorder"
                            Value="{StaticResource ComboBoxDisabledBackgroundBrush}" />
                    <Setter Property="Border.BorderBrush" TargetName="ButtonBorder"
                            Value="{StaticResource ComboBoxDisabledBorderBrush}" />
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}" />
                    <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle" TargetType="{x:Type ComboBox}">

            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="TextElement.Foreground" Value="Black" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">

                        <Grid>
                            <ToggleButton Name="ToggleButton" Grid.Column="2"
                                          ClickMode="Press" Focusable="False"
                                          IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                          Template="{StaticResource ComboBoxToggleButtonTemplate}" />

                            <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                                              HorizontalAlignment="Left" VerticalAlignment="Center"
                                              Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                            <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"
                                     IsReadOnly="{TemplateBinding IsReadOnly}"
                                     Visibility="Hidden" Background="Transparent"
                                     HorizontalAlignment="Left" VerticalAlignment="Center"
                                     Focusable="True">
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox">
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!-- Popup showing items -->
                            <Popup Name="Popup" Placement="Bottom"
                                   Focusable="False" AllowsTransparency="True"
                                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                      MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                                            CornerRadius="0" BorderThickness="1,1,1,1"
                                            BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" />
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground"
                                        Value="{StaticResource ComboBoxDisabledForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                                <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox"
                                        Value="Visible" />
                                <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <converters:NullBoolConverter x:Key="NullBoolConverter" />

    </Window.Resources>
    <DockPanel Background="#F8F8F8">
        <DockPanel Height="40" Background="#F0F0F0" HorizontalAlignment="Stretch" DockPanel.Dock="Top">
            <Rectangle Height="1" Fill="White" DockPanel.Dock="Bottom" />
            <Rectangle Height="1" Fill="#A0A0A0" DockPanel.Dock="Bottom" />
            <Button Command="{Binding AddCommand}" Background="Transparent" BorderThickness="0" DockPanel.Dock="Left"
                    Width="53" Margin="10,7,0,7" HorizontalAlignment="Left">
                <DockPanel Background="Transparent">
                    <Image DockPanel.Dock="Left" Source="pack://application:,,,/Resources/Icons/plus_48px.png">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.3" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Label Background="Transparent" VerticalContentAlignment="Center" Padding="0" Content="Add" />
                </DockPanel>
            </Button>
            <Button Command="{Binding DeleteCommand}" Background="Transparent" BorderThickness="0"
                    DockPanel.Dock="Left" Width="65" Margin="2,7,7,7" HorizontalAlignment="Left">
                <DockPanel Background="Transparent">
                    <Image DockPanel.Dock="Left" Source="pack://application:,,,/Resources/Icons/minus_48px.png">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.3" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>

                    <Label Background="Transparent" VerticalContentAlignment="Center" Padding="0" Content="Delete" />
                </DockPanel>
            </Button>
            <Label DockPanel.Dock="Right" HorizontalAlignment="Right" FontSize="14" Margin="0,0,10,0" FontWeight="Bold"
                   VerticalAlignment="Center" Content="Sensors" />
        </DockPanel>

        <DockPanel Background="#F0F0F0" DockPanel.Dock="Bottom">
            <Rectangle Height="1" Fill="White" DockPanel.Dock="Top" />
            <Rectangle Height="1" Fill="#A0A0A0" DockPanel.Dock="Top" />


            <Button BorderBrush="#A0A0A0" Background="Transparent" Margin="5" HorizontalAlignment="Right"
                    DockPanel.Dock="Right" Height="25" Width="60"
                    Content="Cancel" Command="{Binding CancelCommand}" />
            <Button BorderBrush="#A0A0A0" Background="Transparent" Margin="5" Height="25" Width="60"
                    HorizontalAlignment="Right" Command="{Binding SaveCommand}">
                <DockPanel Background="Transparent">
                    <Image DockPanel.Dock="Left" Source="pack://application:,,,/Resources/Icons/checkmark_48px.png">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.3" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Label Background="Transparent" VerticalContentAlignment="Center" Padding="0" Content="Save" />
                </DockPanel>
            </Button>
        </DockPanel>
        <DockPanel Margin="10">
            <DockPanel>

                <ListBox Name="lb" Width="180" DockPanel.Dock="Left" ItemsSource="{Binding Sensors}" SelectionChanged="lb_SelectionChanged"
                        />
            </DockPanel>

            <DockPanel Margin="10,0,0,0">
                <Grid IsEnabled="{Binding Unit, Converter={StaticResource NullBoolConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />

                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Label VerticalAlignment="Center" VerticalContentAlignment="Center" Grid.Row="0" Grid.Column="0"
                           Content="Manufacturer" />

                    <TextBox Height="23" Name="Manufacturer" VerticalContentAlignment="Center" Margin="0,5,0,5"
                             Grid.Row="0" Grid.Column="1"
                             Text="{Binding SelectedSensor.Manufacturer, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Style.Triggers>
                                    <Trigger Property="Validation.HasError" Value="true">
                                        <Setter Property="ToolTip"
                                                Value="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors)[0].ErrorContent}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>


                    <Label VerticalAlignment="Center" VerticalContentAlignment="Center" Grid.Row="1" Grid.Column="0"
                           Content="Model" />

                    <TextBox Height="23" Name="Model" VerticalContentAlignment="Center" Margin="0,5,0,5"
                             Grid.Row="1" Grid.Column="1"
                             Text="{Binding SelectedSensor.Model, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Style.Triggers>
                                    <Trigger Property="Validation.HasError" Value="true">
                                        <Setter Property="ToolTip"
                                                Value="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors)[0].ErrorContent}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <Label VerticalAlignment="Top" VerticalContentAlignment="Center" Grid.Row="2" Grid.Column="0"
                           Content="Description" />

                    <TextBox Height="46"  VerticalContentAlignment="Top" Margin="0,5,0,5" Name="Description"
                             Grid.Row="2" Grid.Column="1"
                             Text="{Binding SelectedSensor.Description, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Style.Triggers>
                                    <Trigger Property="Validation.HasError" Value="true">
                                        <Setter Property="ToolTip"
                                                Value="{Binding RelativeSource={RelativeSource Self},Path=(Validation.Errors)[0].ErrorContent}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>



                    <Label VerticalAlignment="Center" VerticalContentAlignment="Center" Grid.Row="3" Grid.Column="0"
                           Content="Sensor Type" />

                    <ComboBox Style="{StaticResource ComboBoxFlatStyle}" Margin="0,5,0,5" Height="22" Name="SensorType"
                              VerticalContentAlignment="Center" ItemsSource="{Binding SensorTypes}"
                              SelectedItem="{Binding SelectedSensor.SensorType}"
                              Grid.Row="3"
                              Grid.Column="1" />

                    <!--<Label VerticalAlignment="Top" VerticalContentAlignment="Center" Grid.Row="2" Grid.Column="0"
                           Content="Units" />-->

                    <!--<ListBox Grid.Column="1" Grid.Row="2" Height="100" ItemsSource="{Binding SelectedSensorType.Units}" SelectedItem="{Binding SelectedUnit}"/>-->
                    
                    <!--<StackPanel Height="35" HorizontalAlignment="Right" Grid.Row="3" Grid.Column="1" Orientation="Horizontal">
                        <Button Command="{Binding AddUnitCommand}" Background="Transparent" BorderThickness="0" DockPanel.Dock="Left"
                    Width="45" Margin="10,7,0,7" HorizontalAlignment="Right">
                            <DockPanel Background="Transparent">
                                <Image DockPanel.Dock="Left" Source="pack://application:,,,/Resources/Icons/plus_48px.png">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" Value="0.3" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <Label Background="Transparent" VerticalContentAlignment="Center" FontSize="11" Padding="0" Content="Add" />
                            </DockPanel>
                        </Button>
                        <Button Command="{Binding DeleteUnitCommand}" Background="Transparent" BorderThickness="0"
                    DockPanel.Dock="Left" Width="65" Margin="2,7,7,7" HorizontalAlignment="Right">
                            <DockPanel Background="Transparent">
                                <Image DockPanel.Dock="Left" Source="pack://application:,,,/Resources/Icons/minus_48px.png">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" Value="0.3" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>

                                <Label Background="Transparent" FontSize="11" VerticalContentAlignment="Center" Padding="0" Content="Delete" />
                            </DockPanel>
                        </Button>
                    </StackPanel>-->

                </Grid>
            </DockPanel>
        </DockPanel>
    </DockPanel>
</Window>